name: ci

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package + extras
        run: |
          python -m pip install --upgrade pip
          pip install ".[test,bus]"  # core + pytest + ampy-bus[nats]

      - name: Unit tests
        run: pytest -q

      - name: Start NATS with JetStream
        run: |
          docker run -d --name nats -p 4222:4222 nats:2.10 -js
          # Simple wait
          for i in {1..20}; do nc -z 127.0.0.1 4222 && break || sleep 0.5; done

      - name: Control-plane smoke (agent + ops apply)
        env:
          NATS_URL: nats://127.0.0.1:4222
          AMPY_CONFIG_AUTO_PROVISION: "true"               # dev-only helper
          AMPY_CONFIG_STREAM: "ampy-control"
          AMPY_CONFIG_SUBJECT_PATTERN: "ampy.*.control.v1.*"
          AMPY_CONFIG_DURABLE: "ampy-config-agent"
        run: |
          # Start agent in background
          python -m ampy_config.cli agent --profile dev &
          AGENT_PID=$!
          sleep 2

          # Create a tiny overlay
          cat > /tmp/overlay.yaml <<'YAML'
          oms:
            risk:
              max_order_notional_usd: 66000
          YAML

          # Publish an apply
          python -m ampy_config.cli ops apply --profile dev --overlay-file /tmp/overlay.yaml

          # Give agent time to apply + persist
          sleep 2

          # Confirm runtime persisted change
          grep -q "66000" runtime/overrides.yaml

          # Stop agent
          kill $AGENT_PID || true
          docker rm -f nats || true

  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Build sdist/wheel
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build
      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
